// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace EFProvider
{
    using Application.DTO;

    // Scores
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class ScoreConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Score>
    {
        public ScoreConfiguration()
            : this("dbo")
        {
        }

        public ScoreConfiguration(string schema)
        {
            ToTable("Scores", schema);
            HasKey(x => new { x.Id, x.TeamId, x.MatchId, x.Score_ });

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TeamId).HasColumnName(@"TeamID").IsRequired().HasColumnType("int");
            Property(x => x.MatchId).HasColumnName(@"MatchID").IsRequired().HasColumnType("int");
            Property(x => x.Score_).HasColumnName(@"Score").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.Match).WithMany(b => b.Scores).HasForeignKey(c => c.MatchId).WillCascadeOnDelete(false); // FK_Scores_Matches
            HasRequired(a => a.Team).WithMany(b => b.Scores).HasForeignKey(c => c.TeamId).WillCascadeOnDelete(false); // FK_Scores_Teams
        }
    }

}
// </auto-generated>
